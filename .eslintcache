[{"/Users/narminmolina/Desktop/React-table/src/main.tsx":"1","/Users/narminmolina/Desktop/React-table/src/components/App.tsx":"2","/Users/narminmolina/Desktop/React-table/src/components/Table.tsx":"3","/Users/narminmolina/Desktop/React-table/src/contexts/LoginContext.tsx":"4","/Users/narminmolina/Desktop/React-table/src/components/Login.tsx":"5"},{"size":577,"mtime":1684678772256,"results":"6","hashOfConfig":"7"},{"size":317,"mtime":1684677973766,"results":"8","hashOfConfig":"7"},{"size":153,"mtime":1684675679646,"results":"9","hashOfConfig":"7"},{"size":841,"mtime":1684679036271,"results":"10","hashOfConfig":"7"},{"size":1204,"mtime":1684678579341,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"17l4fy1",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"15"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/Users/narminmolina/Desktop/React-table/src/main.tsx",[],[],[],"/Users/narminmolina/Desktop/React-table/src/components/App.tsx",[],[],"/Users/narminmolina/Desktop/React-table/src/components/Table.tsx",[],[],"/Users/narminmolina/Desktop/React-table/src/contexts/LoginContext.tsx",["30","31"],[],"import { ReactNode, createContext, useState, useMemo, useCallback } from 'react';\n\ninterface LoginContextParams {\n\tisUserLoggedIn: boolean;\n\tlogin: () => void;\n\tlogout: () => void;\n}\ninterface LoginProviderProps {\n\tchildren: ReactNode;\n}\n\nexport const LoginContext = createContext<LoginContextParams | null>(null);\n\nexport const LoginProvider = ({ children }: LoginProviderProps) => {\n\tconst [isUserLoggedIn, setIsUserLoggedIn] = useState<boolean>(() =>\n\t\tJSON.parse(localStorage.getItem('isUserLoggedIn') || 'false')\n\t);\n\tconst login = () => {\n\t\tsetIsUserLoggedIn(true);\n\t\tlocalStorage.setItem('isUserLoggedIn', 'true');\n\t};\n\n\tconst logout = () => {\n\t\tsetIsUserLoggedIn(false);\n\t\tlocalStorage.removeItem('isUserLoggedIn');\n\t};\n\n\treturn <LoginContext.Provider value={{ isUserLoggedIn, login, logout }}>{children}</LoginContext.Provider>;\n};\n","/Users/narminmolina/Desktop/React-table/src/components/Login.tsx",[],[],[],{"ruleId":"32","severity":1,"message":"33","line":1,"column":46,"nodeType":"34","messageId":"35","endLine":1,"endColumn":53},{"ruleId":"32","severity":1,"message":"36","line":1,"column":55,"nodeType":"34","messageId":"35","endLine":1,"endColumn":66},"@typescript-eslint/no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'useCallback' is defined but never used."]